trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - develop
      - release*
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
      - LICENSE

variables:
  group: 'pipelines'

stages:
- stage: Preflight
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    - script: |
        npm audit
      displayName: 'Audit'
    - script: |
        npm i
      displayName: 'Install dependencies'
    - script: |
        npm run standard
      displayName: 'Standardjs report'
- stage: Test
  jobs:
  - job: Node_14
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - template: azure-templates/test.template.yml
  - job: Node_16
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
    - template: azure-templates/test.template.yml
  - job: Node_18
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    - template: azure-templates/test.template.yml
- stage: Artifacts
  jobs:
  - job: 'Publish_Artifacts'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    - script: |
        npm pack
      displayName: 'Package artifact'
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(System.DefaultWorkingDirectory)
        TargetFolder: $(Build.ArtifactStagingDirectory)
        Contents: |
          *.tgz
        OverWrite: true
      displayName: 'Artifacts to publish'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'sdk'
      displayName: 'Publish artifacts'
